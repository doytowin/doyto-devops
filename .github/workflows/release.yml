name: Release

on:
  workflow_call:
    inputs:
      java-version:
        required: false
        type: string
        default: 8

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure Git User
        run: |
          git config user.email ${{ vars.GH_EMAIL }}
          git config user.name "${{ vars.GH_USERNAME }}"
          git config user.signingkey ${{ vars.GPG_KEY_ID }}
          git config gpg.program gpg 
          git config commit.gpgsign true

      - name: Set up JDK ${{ inputs.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: 'adopt'
          cache: 'maven'
          server-id: sonatype-nexus-staging # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: OSSRH_USERNAME # env variable for username in deploy
          server-password: OSSRH_PASSWORD # env variable for token in deploy
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: GPG_PASSPHRASE # env variable for GPG private key passphrase

      - name: Test tty
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo 'use-agent' >> ~/.gnupg/gpg.conf
          echo 'pinentry-mode loopback' >> ~/.gnupg/gpg.conf
          echo 'allow-loopback-pinentry' >> ~/.gnupg/gpg-agent.conf
          echo "RELOADAGENT" | gpg-connect-agent
          ls -la /dev/tty
          export GPG_TTY=`tty`
          echo "test" | gpg --clearsign

      - name: Deploy to Nexus
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -B release:prepare release:perform

      - name: Rollback on failure
        if: failure()
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -B release:rollback
